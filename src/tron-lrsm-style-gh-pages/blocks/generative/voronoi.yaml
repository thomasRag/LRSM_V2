import: random.yaml
styles:
    generative-voronoi:
        doc:
            author: 
                name: Patricio Gonzalez Vivo
                twitter: patriciogv
            version: 0.0.1
            tangram-version: 0.0.7
            licence: MIT
            description: |
                Set of Voronoi functions.
                For more information on this theme read [this chapter of The Book of Shaders about Cellular Noise and Voronoi](http://thebookofshaders.com/12/).
        mix: generative-random
        shaders:
            blocks:
                global: |
                    vec3 voronoi (vec2 st) {
                        vec2 ipos = floor(st);
                        vec2 fpos = fract(st);
                        vec3 m = vec3( 8.0 );
                        for( int j=-1; j<=1; j++ ){
                            for( int i=-1; i<=1; i++ ){
                                vec2  g = vec2( float(i), float(j) );
                                vec2  o = random2( ipos + g );
                                vec2  r = g - fpos + o;
                                float d = dot( r, r );
                                if( d<m.x )
                                    m = vec3( d, o );
                            }
                        }
                        return m;
                    }