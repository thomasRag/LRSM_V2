import:
- ../generative/random.yaml
styles:
    generative-random:
        doc:
            author:
                name: Patricio Gonzalez Vivo
                twitter: patriciogv
            description: 'Set of functions about random.

                For more information on this theme read [this chapter of The Book
                of Shaders about Random](http://thebookofshaders.com/10/).

                '
            licence: MIT
            tangram-version: 0.0.7
            version: 0.0.1
        shaders:
            blocks:
                global: "// 1D Random for 1 and 2 dimentions\n// ================================\n\
                    float random (float x) { return fract(sin(x)*43758.5453);}\nfloat\
                    \ random (vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y *\
                    \ 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\nfloat random\
                    \ (vec3 p) { return fract(sin(dot(p.xyz, vec3(70.9898,78.233,32.4355)))*\
                    \ 43758.5453123); }\n//\n// 2D Random for 2 dimentions\n// ================================\n\
                    vec2 random2 (vec2 xy) { return fract(sin(vec2(dot(xy,vec2(127.1,311.7)),dot(xy,vec2(269.5,183.3))))*43758.5453);\
                    \ }\n//\n// 3D Random for 2 dimentions\n// ================================\n\
                    vec3 random3 (vec2 xy) { return fract(sin(vec3( dot(xy,vec2(127.1,311.7)),\
                    \ dot(xy,vec2(269.5,183.3)), dot(xy,vec2(419.2,371.9)) ))*43758.5453);\
                    \ }\nvec3 random3 (vec3 c) {\n    float j = 4096.0*sin(dot(c,vec3(17.0,\
                    \ 59.4, 15.0)));\n    vec3 r;\n    r.z = fract(512.0*j);\n   \
                    \ j *= .125;\n    r.x = fract(512.0*j);\n    j *= .125;\n    r.y\
                    \ = fract(512.0*j);\n    return r-0.5;\n}"
    lines-datastream:
        base: lines
        doc:
            author:
                name: Patricio Gonzalez Vivo
                twitter: patriciogv
            description: 'Apply some stream of random lines to your lines

                '
            licence: MIT
            tangram-version: 0.0.7
            version: 0.0.1
        mix:
        - generative-random
        shaders:
            blocks:
                color: "color.rgb = mix(DATASTREAM_BACKGROUND_COLOR,\n           \
                    \     DATASTREAM_COLOR,\n                datastream_pattern( v_texcoord.xy,\
                    \ \n                                    u_time*(DATASTREAM_SPEED)*(-.5\
                    \ * random(floor(v_texcoord.x*DATASTREAM_ROADS)) - .5), \n   \
                    \                                 DATASTREAM_AMOUNT )* \n    \
                    \            (step(DATASTREAM_MARGIN,1.-fract(v_texcoord.x*DATASTREAM_ROADS))*\n\
                    \                 step(DATASTREAM_MARGIN,fract(v_texcoord.x*DATASTREAM_ROADS))));"
                global: "float datastream_pattern(vec2 st, float v, float t) {\n \
                    \   float p = floor(st.y+v);\n    return step(t, (random(p*.000001)+random(p))*.5\
                    \ );\n}\n"
            defines:
                DATASTREAM_AMOUNT: 0.8
                DATASTREAM_BACKGROUND_COLOR: color.rgb
                DATASTREAM_COLOR: vec3(1.)
                DATASTREAM_MARGIN: 0.4
                DATASTREAM_ROADS: 5.0
                DATASTREAM_SPEED: 20.0
        texcoords: true
        ui:
            shaders:
                defines:
                    DATASTREAM_AMOUNT:
                        label: Amount
                        range:
                            max: 1.0
                            min: 0.0
                            step: 0.01
                        type: number
                    DATASTREAM_BACKGROUND_COLOR:
                        label: Background color
                        type: color
                    DATASTREAM_COLOR:
                        label: Color
                        type: color
                    DATASTREAM_MARGIN:
                        label: Lines margins
                        range:
                            max: 1.0
                            min: 0.0
                            step: 0.01
                        type: number
                    DATASTREAM_ROADS:
                        label: Number of roads
                        range:
                            max: 10.0
                            min: 0.0
                            step: 1.0
                        type: number
                    DATASTREAM_SPEED:
                        label: Speed
                        range:
                            max: 1000.0
                            min: 0.0
                            step: 0.5
                        type: number
