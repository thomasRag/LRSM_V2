import:
    - ../geometry/normal.yaml
    - ../generative/random.yaml

styles:
    polygons-windows:
        doc:
            author: 
                name: Patricio Gonzalez Vivo
                twitter: patriciogv
            version: 0.0.1
            tangram-version: 0.0.7
            licence: MIT
            description: |
                Apply a windows patterns on the walls of a geometry
            examples:
                gotham:
                    url: https://tangrams.github.io/tangram-sandbox/styles/gotham.yaml
                    img: https://tangrams.github.io/tangram-sandbox/styles/gotham.png
                    lines: 128
        texcoords: true
        base: polygons
        mix: [geometry-normal, generative-random]
        material:
            shininess: 1.
            specular: 0.0
            emission: 0.0
        shaders:
            blocks:
                color: |
                    color.rgb *= vec3(min((worldPosition().z*.001 + .5),1.));
                    float t = 0.5;
                    if (isWall()) {
                        vec2 st = vec2(v_texcoord.x*10.,worldPosition().z*0.2);
                        vec2 ipos = floor(st);
                        vec2 fpos = fract(st);
                        if ( step(0.6,fpos.x)*step(0.4,fpos.y) > 0.0 ){
                            material.specular = vec4(1.) * max( 1.-(worldPosition().z*.001 + .5), 0. );
                            material.emission = vec4(0.988,0.983,0.880,1.0) * step(.5,random(ipos+floor(worldNormal().xy*10.0)+t));
                        }
                    }
                filter: |
                    color.rgb += vec3(1.)* min( 1.-(worldPosition().z*.001 + .7) , 0.5 );